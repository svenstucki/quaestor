stages:
  - build
  - deploy

variables:
    APT_CACHE_DIR: $CI_PROJECT_DIR/apt
    DOCKER_DRIVER: overlay2

before_script:
    - apt update -y && apt install -y openssh-client rsync gettext-base apache2-utils
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

build-docker:
    tags:
        - dind
    stage: build
    image: docker:19.03.1
    services:
        - docker:19.03.1-dind
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        # Build the application container
        - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH || true
        - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH -f Dockerfile .
        - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    only:
        - branches

deploy-production:
    stage: deploy
    tags:
        - docker
    dependencies:
        - build-docker
    script:
        - export SERVICE_NAME=quaestor
        - export SERVICE_DOMAIN=quaestor.technokrat.ch
        - echo "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY" | envsubst | ssh deploy@cloud.technokrat.ch
        - envsubst < docker-compose.yml | ssh deploy@cloud.technokrat.ch "docker-compose -f - pull"
        - envsubst < docker-compose.yml | ssh deploy@cloud.technokrat.ch "docker-compose -f - stop"
        - envsubst < docker-compose.yml | ssh deploy@cloud.technokrat.ch "docker-compose -f - rm -f"
        - envsubst < docker-compose.yml | ssh deploy@cloud.technokrat.ch "docker-compose -f - up -d $SERVICE_NAME"
    environment:
        name: production
        url: technokrat.ch
    only:
        - master

cache:
    paths:
        - apt/
